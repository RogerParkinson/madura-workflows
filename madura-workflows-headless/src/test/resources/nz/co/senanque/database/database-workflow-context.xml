<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright (c)2014 Prometheus Consulting

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<description>Database Configuration</description>

	<tx:annotation-driven proxy-target-class="true" />

    <bean id="JDBCPool" class="com.vaadin.data.util.sqlcontainer.connection.SimpleJDBCConnectionPool">
    	<constructor-arg index="0" value="org.h2.jdbcx.JdbcDataSource"/>
    	<constructor-arg index="1" value="jdbc:h2:mem:workflow;DB_CLOSE_DELAY=-1;MVCC=true"/>
    	<constructor-arg index="2" value=""/>
    	<constructor-arg index="3" value=""/>
    </bean>
    
	<bean id="em-workflow"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="springJtaPlatformAdapter">
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence-workflow.xml" />
		<property name="persistenceUnitName" value="pu-workflow" />
		<property name="dataSource" ref="dataSourceWorkflow" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaProperties">
			<map>
				<entry key="hibernate.transaction.jta.platform" value="nz.co.senanque.hibernate.SpringJtaPlatformAdapter" />
				<entry key="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
				<entry key="hibernate.format_sql" value="true" />
				<entry key="hibernate.connection.autocommit" value="false" />
			</map>
		</property>
	</bean>

    <bean id="dataSourceWorkflow" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
	    <property name="uniqueResourceName" value="pu__workflow" />
	    <property name="xaDataSourceClassName" value="org.h2.jdbcx.JdbcDataSource" />
	    <property name="xaProperties">
	        <props>
	        <prop key="url">jdbc:h2:mem:workflow;DB_CLOSE_DELAY=-1;MVCC=true</prop>
	        </props>
	    </property>
	    <property name="maxPoolSize" value="20"/>
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
		<!-- ensures new db is auto created if needed -->
		<property name="generateDdl" value="true" />
		<property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
	</bean>

    <bean id="springJtaPlatformAdapter" class="nz.co.senanque.hibernate.SpringJtaPlatformAdapter">
        <property name="jtaTransactionManager" ref="transactionManager" />
    </bean>
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown" value="false" />
	</bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>
	
    <bean id="persistenceAnnotation" class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

</beans>