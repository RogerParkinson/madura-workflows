<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright (c)2014 Prometheus Consulting

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:bundle="http://www.senanque.co.nz/madura/bundle"
	xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation=" 
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.senanque.co.nz/madura/bundle http://www.senanque.co.nz/madura/bundle/MaduraBundle.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	>

	<!-- Activate Spring annotation support -->
	<context:annotation-config />
    <import resource="database-context.xml"/>
    <import resource="security-context.xml"/>
   
	<!-- Assists with loading the Vaadin application -->
	<bean id="springContextLoader" class="nz.co.senanque.vaadinsupport.application.SpringApplicationLoader"/>
 	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
                <value>ValidationMessages</value>
				<value>org/springframework/security/messages</value>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<bean name="environment" class="nz.co.senanque.forms.FormEnvironment">
		<property name="name" value="Vaadin"/>
	</bean>

 	<jee:jndi-lookup id="bundlesDir" jndi-name="java:/comp/env/WorkflowUIBundlesDir" expected-type="java.lang.String" />
	<bean id="bundleManager" class="nz.co.senanque.madura.bundle.BundleManagerImpl">
 		<property name="directory" ref="bundlesDir"/>
		<property name="inheritableBeans">
			<map>
				<entry key="jpaVendorAdapter" value-ref="jpaVendorAdapter"/>
				<entry key="transactionManager" value-ref="transactionManager"/>
				<entry key="lockFactory" value-ref="lockFactory"/>
				<entry key="em-workflow" value-ref="em-workflow"/>
				<entry key="atomikosTransactionManager" value-ref="atomikosTransactionManager"/>
				<entry key="atomikosUserTransaction" value-ref="atomikosUserTransaction"/>
				<entry key="errorEndpoint" value-ref="errorEndpoint"/>
				<entry key="genericEndpoint" value-ref="genericEndpoint"/>
				<entry key="environment" value-ref="environment"/>
				<entry key="workflowDAO" value-ref="workflowDAO"/>
				<entry key="bundleManager" value-ref="bundleManager"/>
				<entry key="hints" value-ref="hints"/>
			</map>
		</property>
<!-- 		<property name="time" value="5000"/>  Let the scheduler handle this -->
	</bean>

	<bean id="bundleListener" class="nz.co.senanque.workflowui.bundles.BundleListenerImpl">
		<property name="messageSource" ref="messageSource"/>
		<property name="queueProcessManager" ref="queueProcessManager"/>
	</bean>
	<bean id="queueProcessManager" class="nz.co.senanque.workflowui.bundles.QueueProcessManager">
	</bean>
    <bean id="permissionManager" class="nz.co.senanque.vaadinsupport.permissionmanager.PermissionManagerImpl" scope="session"/>
    <bean id="hints" class="nz.co.senanque.workflowui.WorkflowUIHints"/>
	
	<bean id="workflowDAO" class="nz.co.senanque.workflow.WorkflowJPA"/>
	<bean id="lockFactory" class="nz.co.senanque.locking.simple.SimpleLockFactory"/>
	<bundle:bean id="workflowManager" interface="nz.co.senanque.workflow.WorkflowManager"/>
	<bean id="bundleSelector" class="nz.co.senanque.workflowui.bundles.BundleSelectorImpl"/>
	
   <bean id="validationEngine" class="nz.co.senanque.validationengine.ValidationEngineImpl">
    	<property name="identifier" value="workflow.instances"/>
        <property name="metadata" ref="metadata"/>
    </bean>
    <bean id="metadata" class="nz.co.senanque.validationengine.metadata.AnnotationsMetadataFactory">
        <property name="package" value="nz.co.senanque.workflow.instances"/>
        <property name="fieldValidators">
            <list>
                <value>nz.co.senanque.validationengine.fieldvalidators.RegexValidator</value>
                <value>nz.co.senanque.validationengine.fieldvalidators.LengthValidator</value>
                <value>nz.co.senanque.validationengine.fieldvalidators.RangeValidator</value>
                <value>nz.co.senanque.validationengine.fieldvalidators.EmailValidator</value>
                <value>nz.co.senanque.validationengine.fieldvalidators.DigitsValidator</value>
            </list>
        </property>
        <property name="choicesDocument" value="classpath:choices.xml"/>
    </bean>

    <!-- endpoints needed by SI -->
    <bean id="errorEndpoint" class="nz.co.senanque.messaging.ErrorEndpoint" />
    <bean id="genericEndpoint" class="nz.co.senanque.messaging.GenericEndpoint" />

    <!-- The executor is responsible for scanning for active processes etc -->
    <bean id="executor" class="nz.co.senanque.workflow.ExecutorImpl" />

    <task:scheduler id="myScheduler" pool-size="10" />
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="bundleManager" method="scan"
            fixed-delay="10000" />
    </task:scheduled-tasks>
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="executor" method="activeProcesses"
            fixed-delay="10000" />
    </task:scheduled-tasks>
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="executor" method="deferredEvents"
            fixed-delay="10000" />
    </task:scheduled-tasks>
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="executor" method="clearDeferredEvents"
            fixed-delay="60000" />
    </task:scheduled-tasks>

</beans>
